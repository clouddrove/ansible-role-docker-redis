---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Ansible Role Docker Redis

# License of this project
license: "MIT"

# Canonical GitHub repo
github_repo: clouddrove/ansible-role-docker-redis

# Badges to display
badges:
  - name: "Ansible"
    image: "https://img.shields.io/badge/Ansible-2.9-green?style=flat&logo=ansible"
    url: "https://www.ansible.com"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-MIT-blue.svg"
    url: "LICENSE.md"
  - name: "Distribution"
    image: "https://img.shields.io/badge/ubuntu-18.x-orange?style=flat&logo=ubuntu"
    url: "https://ubuntu.com/"
  - name: "Distribution"
    image: "https://img.shields.io/badge/ubuntu-20.x-orange?style=flat&logo=ubuntu"
    url: "https://ubuntu.com/"
  - name: "Distribution"
    image: "https://img.shields.io/badge/CentOS-8-green?style=flat&logo=centos"
    url: "https://www.centos.org/"
  - name: "Distribution"
    image: "https://img.shields.io/badge/Amazon_linux-2-yellow?style=flat&logo=linux"
    url: "https://aws.amazon.com/amazon-linux-ami/"
  - name: "Actions"
    image: "https://github.com/clouddrove/ansible-role-docker-redis/actions/workflows/lint.yml/badge.svg"
    url: "https://github.com/clouddrove/ansible-role-docker-redis/actions/workflows/lint.yml"

# Prerequesties to display
# yamllint disable
prerequesties:
  - name: "Ansible2.9"
    url: "https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html"
  - name: "Python"
    url: "https://www.python.org/downloads"
  - name: "Docker"
    url: "https://docs.docker.com/install/linux/docker-ce/ubuntu"
# yamllint enable
# What Includes to display
what_includes:
  - name: "redis-cli"
  - name: "redis-server"


#  description of this project
description: |-
  This ansible role is used to setup Redis server with docker on Debian.

# How to use this project
usage: |-
  ```yaml
  - hosts: localhost
    remote_user: ubuntu
    become: true
    roles:
      - clouddrove.ansible_role_docker_redis
  ```
# Variables use in the project
variables: |-
  ```yaml
    redis_version: "6.2"
    redis_user: redis
    redis_group: redis
    mount_path: /data
    redis_server_opt_dir: "/opt/redis-server"
    redis_server_config_dir: "{{ redis_server_opt_dir }}/config"
    redis_server_log_dir: "/var/log/redis"
    redis_server_data_dir: "{{ mount_path }}/redis-server"
    redis_server_bind: 0.0.0.0
    redis_server_port: 6379
    redis_server_password: false
    redis_server_min_slaves_to_write: 0
    redis_server_min_slaves_max_lag: 10
    redis_server_tcp_backlog: 10000
    redis_server_tcp_keepalive: 20
    redis_server_maxclients: 30000
    redis_server_timeout: 0
    redis_server_slaveof: false
    redis_server_slave_read_only: "yes"
    redis_server_slave_priority: 100
    redis_server_repl_backlog_size: false
    redis_server_dir: /var/lib/redis
    redis_server_logfile: '"/var/log/redis/redis-server.log"'
    redis_server_databases: 16
    redis_server_loglevel: notice
    redis_server_slowlog_log_slower_than: 10000
    redis_server_slowlog_max_len: 128
    redis_server_maxmemory: false
    redis_server_maxmemory_policy: noeviction
    redis_server_rename_commands: []
    redis_server_save:
      - 900 1
      - 300 10
      - 60 10000
    redis_server_stop_writes_on_bgsave_error: "yes"
    redis_server_rdbcompression: "yes"
    redis_server_rdbchecksum: "yes"
    redis_server_appendonly: "no"
    redis_server_appendfilename: "appendonly.aof"
    redis_server_appendfsync: "everysec"
    redis_server_no_appendfsync_on_rewrite: "no"
    redis_server_auto_aof_rewrite_percentage: "100"
    redis_server_auto_aof_rewrite_min_size: "64mb"
    redis_server_notify_keyspace_events: '""'
  ```

# How to install project
installation: |-
  ```console
    $ ansible-galaxy install clouddrove.ansible_role_docker_redis
  ```
